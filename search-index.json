[{"documents":[{"i":1,"t":"如何使用CRDT实现一个简单的多人文本协同应用","u":"/blog/2022/07/07/crdt-toy","b":["Blog"]},{"i":6,"t":"","u":"/blog/archive","b":["Blog"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[0,0.492]],["t/6",[]]],"invertedIndex":[["crdt",{"_index":0,"t":{"1":{"position":[[0,23]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":3,"t":"什么是CRDTs","u":"/blog/2022/07/07/crdt-toy","h":"","p":1},{"i":5,"t":"未完","u":"/blog/2022/07/07/crdt-toy","h":"","p":1}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/3",[0,0.693]],["t/5",[1,0.693]]],"invertedIndex":[["",{"_index":1,"t":{"5":{"position":[[0,2]]}}}],["crdt",{"_index":0,"t":{"3":{"position":[[0,8]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":2,"t":"这篇博客将简要介绍CRDTs（Conflict-free Replicated Data Types）的基本概念以及从开发者的角度着重介绍简单的CRDTs的实现（基于RGA算法）流程与细节，并且基于这些知识点实现一个rust+wasm的简单web文本协作demo。 项目地址: https://github.com/Leeeon233/crdt-toy demo地址: https://leonzhao.cn/crdt-toy","s":"如何使用CRDT实现一个简单的多人文本协同应用","u":"/blog/2022/07/07/crdt-toy","h":"","p":1},{"i":4,"t":"对于CRDTs可以优先通过看[CRDT简介]、[CRDT原理]这些文章了解。 CRDTs是近些年开始备受关注的一种用来处理分布式系统上的协同可用性的数据结构。它在可用性与分区容错性的基础上，不提供完美的一致性而是提供强最终一致性。下面的例子可以帮助我们理解什么是强最终一致性。 比如当前有Alice和Bob两个同学在各自的电脑上共同编辑同一份文档，Alice写入了Hello CRDT，Bob写入了Hello crdt。 但在此时Alice其实并没有办法知晓Bob可能在同一时刻也写入了Hello crdt的文本，而不是就像真正本地那样，完全意义上的在编辑同一份文件（一致性）。 只有当他们进行了一次同步通信后，Alice或者Bob才会知晓对方编辑了什么。crdt所提供的强最终一致性意义并不是让多人协同真正地像大家就在同一页纸上写字一样，而是大家可以各自地编辑自己的内容，尽管在多次同步的过程中会产生冲突，但crdt可以保证所有的消息都被接收后，最终的内容将会是多方一致的，哪怕可能最终冲突解决后的版本并不是真正所期待的结果。 对于Alice和Bob的例子，在输入Hello CRDT和Hello crdt时可能进行了多次的同步操作，最终展现在Alice和Bob眼前的文本根据不同的crdt算法和冲突解决策略可能变得不同。也许是Hello crdt、Hello CRDTHellocrdt或Hello CRDTcrdt等等都有可能，但是最终在Alice和Bob眼前的结果将会是完全一致的其中一种结果。","s":"什么是CRDTs","u":"/blog/2022/07/07/crdt-toy","h":"","p":1}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/2",[0,0.729,1,0.729,2,0.729,3,0.729,4,0.729,5,0.729,6,0.729,7,0.986,8,0.729,9,0.729]],["t/4",[10,0.661,11,1.062,12,0.661,13,0.661,14,0.661,15,0.661,16,0.661,17,0.661,18,0.661,19,0.661,20,0.661,21,0.661]]],"invertedIndex":[["",{"_index":5,"t":{"2":{"position":[[133,5]]}}}],["alice其实并没有办法知晓bob可能在同一时刻也写入了hello",{"_index":14,"t":{"4":{"position":[[211,37]]}}}],["alice和bob两个同学在各自的电脑上共同编辑同一份文档，alice写入了hello",{"_index":12,"t":{"4":{"position":[[139,48]]}}}],["alice和bob的例子，在输入hello",{"_index":16,"t":{"4":{"position":[[465,23]]}}}],["alice或者bob才会知晓对方编辑了什么。crdt所提供的强最终一致性意义并不是让多人协同真正地像大家就在同一页纸上写字一样，而是大家可以各自地编辑自己的内容，尽管在多次同步的过程中会产生冲突，但crdt",{"_index":15,"t":{"4":{"position":[[290,174]]}}}],["crdt",{"_index":11,"t":{"4":{"position":[[39,99],[205,5],[249,40]]}}}],["crdtcrdt等等都有可能，但是最终在alice和bob",{"_index":21,"t":{"4":{"position":[[602,49]]}}}],["crdthellocrdt或hello",{"_index":20,"t":{"4":{"position":[[582,19]]}}}],["crdts可以优先通过看[crdt简介]、[crdt",{"_index":10,"t":{"4":{"position":[[0,38]]}}}],["crdts（conflict",{"_index":0,"t":{"2":{"position":[[0,23]]}}}],["crdt、hello",{"_index":19,"t":{"4":{"position":[[571,10]]}}}],["crdt和hello",{"_index":17,"t":{"4":{"position":[[489,10]]}}}],["crdt时可能进行了多次的同步操作，最终展现在alice和bob眼前的文本根据不同的crdt算法和冲突解决策略可能变得不同。也许是hello",{"_index":18,"t":{"4":{"position":[[500,70]]}}}],["crdt，bob写入了hello",{"_index":13,"t":{"4":{"position":[[188,16]]}}}],["data",{"_index":3,"t":{"2":{"position":[[40,4]]}}}],["demo",{"_index":8,"t":{"2":{"position":[[177,7]]}}}],["free",{"_index":1,"t":{"2":{"position":[[24,4]]}}}],["https://github.com/leeeon233/crdt",{"_index":6,"t":{"2":{"position":[[139,33]]}}}],["https://leonzhao.cn/crdt",{"_index":9,"t":{"2":{"position":[[185,24]]}}}],["replic",{"_index":2,"t":{"2":{"position":[[29,10]]}}}],["toy",{"_index":7,"t":{"2":{"position":[[173,3],[210,3]]}}}],["types）的基本概念以及从开发者的角度着重介绍简单的crdts的实现（基于rga算法）流程与细节，并且基于这些知识点实现一个rust+wasm的简单web文本协作demo",{"_index":4,"t":{"2":{"position":[[45,87]]}}}]],"pipeline":["stemmer"]}}]